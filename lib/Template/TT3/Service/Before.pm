package Template::TT3::Service::Before;

use Template::TT3::Class
    version => 2.70,
    debug   => 0,
    base    => 'Template::TT3::Service',
    config  => 'name=before';


sub serve {
    my ($self, $env, $pipeline) = @_;

    my $before = $self->template( $env )
        || return $pipeline->( $env );

    $before->fill_in( $env->{ context } );
    return $pipeline->( $env );
}


1;

__END__

=head1 NAME

Template::TT3::Service::Before - service module running before a template

=head1 SYNOPSIS

    use Template3;
    
    my $tt3 = Template3->new(
        before => 'site/config.tt3',
    );
    
=head1 DESCRIPTION

This module is a subclass of L<Template::TT3::Service> for running a template
before the main page template is processed. It is typically used to process
site-wide configuration templates.

Unlike the L<header|Template::TT3::Service::Header> service, no output is
generated from the C<before> template. Although configuration template are
usually employed to pre-define some global variables, functions, macros, etc.,
and don't intentionally generate any content, it's not unusual for them to
have a few trailing newlines that can end up being inserted at the start of
every page generated. The C<before> service avoids this problem by discarding
any output generated by the template.

=head1 CONFIGURATION OPTIONS

=head2 template

Used to specify the default template that should be processed by the C<before>
service. It can be specified as anything that the L<Template::TT3::Templates>
L<template()|Template::TT3::Templates/template()> method will accept, e.g. a
template name, text references, subroutine reference, etc.

C<template> is the default option for the service.  Thus the following:

    my $before = Template::TT3::Services->service(
        before => 'site/config.tt3',
    );

is syntactic sugar for:

    my $before = Template::TT3::Services->service(
        before => {
            template => 'site/config.tt3',
        },
    );

=head2 name

This can be used to change the name of the service component.  The default
name is C<before>.  If a C<before> is specified in the environment passed
to the pipeline service function then it will be used in preference to the 
default L<template>.

    $pipeline->(
        context => $context,
        input   => 'example.tt3',
        before  => 'my/config.tt3',     # over-ride default before template
    );

=head1 METHODS

This module implements the following methods in addition to those inherited
from the L<Template::TT3::Service>, L<Template::TT3::Base> and L<Badger::Base>
base class modules.

=head2 serve(\%env, $pipeline)

This is the main service method.  It is called automatically when the 
service is bound in a pipeline that is executed.  A copy of the environment
is passed as the first argument (a reference to a hash array).  A reference
to a subroutine representing the rest of the pipeline is passed as the 
second argument.

The method looks in the environment for an item named C<before>, or whatever
alternate L<name> the service has been given.  It processes the template,
discards any output generated and then executes the C<$pipeline>
function to render the rest of the service pipeline. It returns the output
generated from the C<$pipeline> function. 

If no C<before> template is specified, or if it is set to any false value
(e.g. C<0> or the empty string C<''>) then it goes straight on to call the
C<$pipeline> function and returns its result.

=head1 AUTHOR

Andy Wardley  L<http://wardley.org/>

=head1 COPYRIGHT

Copyright (C) 1996-2009 Andy Wardley.  All Rights Reserved.

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=head1 SEE ALSO.

This module inherits methods from the L<Template::TT3::Service>,
L<Template::TT3::Base> and L<Badger::Base> base classes.

Services are loaded and instantiated by the L<Template::TT3::Services> factory
module. This is accessible via the L<Template::TT3::Hub> module. The
L<Template::TT3::Engine::TT3> module uses the services module to construct a
template processing pipeline.

Other similar services include L<Template::TT3::Service::Header>
L<Template::TT3::Service::Footer> and L<Template::TT3::Service::After>.

=cut

# Local Variables:
# mode: perl
# perl-indent-level: 4
# indent-tabs-mode: nil
# End:
#
# vim: expandtab shiftwidth=4:
