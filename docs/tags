NOTE: Nearly all of this is implemented in one form or another, but hasn't yet
been cleaned up and merged into this repository. Coming RSN

TT3 can embed any number of different tags in a template document.  Each tag
can implement it's own syntax, semantics, grammar, etc., effectively allowing
you to embed several different languages into the same template.

As scary as that sounds, the practical reality is more pragmatic.  The 
default set of tags in TT3 templates implement more-or-less the same core
language.  The difference lies in the keywords that different tags support,
when the tags are evaluated (at compile time or run time), or their tokenising
behaviour.

That all sounds rather complicated, but a few examples should illustrate the
different template tags.

First we have the regular TT tags delimited with '[%' and '%]'.  
In TT3 we call these "inline tags".

    Hello [% name or 'World' %]

TT3 also supports "outline tags".  These start with the '%%' token and 
continue to the end of the line.  So instead of writing this:

    [% for x in y %]
       ...
    [% end %]

You can now write this:

    %% for x in y
       ...
    %% end

TT3 also introduces "comment tags".  The are delimited with '[#' and '#]'
and can contain any text, including other tags.  Everything between the 
opening '[#' and B<first> '#]' following it is ignored.  

    [# Any other tags inside a comment tag will be ignored.  This makes it
       ideal for longer comments where you want to include an example of use.
       e.g.
       
       This template spanglifies the frobnitz.  Use it like this:
       
           [% fill frobnitz/spanglifier %]
      
       Written by Arthur Dent.  Last updated April 20th 2008.
    #]

You can also use this to temporarily comment out blocks of code.

    [# FIXME: This is broken
    
       [% if x < %]
         blah blah
    #]
    
If you don't like these tags you can easily change them with the TAGS control
directive.  The TAGS directive must take effect immediately (i.e. at compile
time).  TT3 has a new tag style specifically for compile time directives.
They use '[?' and '?]' as delimiters.  We call these the "control tags".

So to change the inline tag style to use the '<*' and '*>' delimiters, you
would write:

    [? TAGS '<* *>' ?]

(NOTE: For the moment I'm keeping TAGS in upper case as a further
reinforcement that it's a special compile-time directive... but I may still
switch it to lower case 'tags' like all the new runtime commands)

This syntax (a single string containing whitespace delimited start/end tokens)
is short-hand for:

    [? TAGS ['<*', '*>'] ?]

The inline tags are the default tags modified by the TAGS command.  You can
also be more explicit:

    [? TAGS.inline ['<*', '*>'] ?]

If it makes you more comfortable you can write this as an assignment.  It
makes no difference.

    [? TAGS.inline = '<* *>' ?]

You can set other tag styles in the same way

    [? TAGS.inline  = '<% %>'
       TAGS.control = '<? ?>'
       TAGS.comment = '<! !>'
       TAGS.outline = '%='
    ?]

Or you can set them en masse like this:

    [?  TAGS = {
          inline  = '<% %>'
          control = '<? ?>'
          comment = '<! !>'
          outline = '%='
        }
    ?]

You can also turn tags on or off.

    [? TAGS off ?]      # turns off default inline tags only
    [? TAGS.* off ?]    # turns off all tags, including control tags
    [? TAGS = {         # turns some off, change others
          inline  = off
          outline = off
          control = '<?? ??>'
       }
    ?]

You can turn tags back on to restore them to their previous values.

    [? TAGS on ?]
    [? TAGS.* on ?]
    [? TAGS = {
         inline = on
         outline = on
       }
    ?]

